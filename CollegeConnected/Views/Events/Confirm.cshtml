@model CollegeConnected.Models.EventViewModel

@{
    ViewBag.Title = "Confirm";
}

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
    var ccEventID = ViewBag.EventID;
}

<h3>Verify your information to sign in</h3>

@using (Html.BeginForm("Confirm", "Events", new {id = Model.Event.EventID}, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>* -Required</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.ValidationMessage("Error")
        @Html.HiddenFor(model => model.Constituent.StudentId)
        @Html.HiddenFor(model => model.Constituent.BirthDate)
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Event.EventID)
        @Html.HiddenFor(model => model.Event.EventName)
        @Html.HiddenFor(model => model.Event.EventLocation)

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.StudentNumber, "N Number", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.StudentNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.StudentNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.FirstName, "First Name*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.MiddleName, "Middle Name", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.MiddleName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.LastName, "Last Name*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.LastName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.PhoneNumber, "Phone", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.PhoneNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.Email, "Email*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.Address1, "Address*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.Address1, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.Address1, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.Address2, "Address2", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.Address2, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.Address2, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.City, "City*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.City, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.State, "State*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Constituent.State, "", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Constituent.State, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.ZipCode, "Zip Code*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.ZipCode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.ZipCode, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.FirstGraduationYear, "First Graduation Year*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Constituent.FirstGraduationYear, (IEnumerable<SelectListItem>) ViewBag.Years, "", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Constituent.FirstGraduationYear, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.SecondGraduationYear, "Second Graduation Year", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Constituent.SecondGraduationYear, (IEnumerable<SelectListItem>) ViewBag.Years, "", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Constituent.SecondGraduationYear, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.ThirdGraduationYear, "Third Graduation Year", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Constituent.ThirdGraduationYear, (IEnumerable<SelectListItem>) ViewBag.Years, "", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Constituent.ThirdGraduationYear, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.BirthDate, "Date of Birth*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Constituent.BirthDate, "ShortDateTime", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.BirthDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.ConstituentType, "Constituent Type*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Constituent.ConstituentType, " ", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Constituent.ConstituentType, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Constituent.AllowCommunication, "Authorize Communication*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Constituent.AllowCommunication, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Constituent.AllowCommunication, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign In" class="btn btn-primary btn-sm"/>
            </div>
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to Sign In", "SignIn", new {id = ccEventID})
    </div>
}