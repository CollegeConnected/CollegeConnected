@model CollegeConnected.Models.EventViewModel

@{
    ViewBag.Title = "Confirm";
}

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
    var ccEventID = ViewContext.RouteData.Values["eventId"];
}

<h3>Verify your information to sign in</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>* -Required</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.ValidationMessage("Error")
        @Html.HiddenFor(model => model.Student.StudentId)
        @Html.HiddenFor(model => model.Student.BirthDate)
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Event.EventID)

        <div class="form-group">
            @Html.LabelFor(model => model.Student.StudentNumber, "N Number", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.StudentNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.StudentNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.FirstName, "First Name*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Student.MiddleName, "Middle Name", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.MiddleName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Student.LastName, "Last Name*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.LastName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.PhoneNumber, "Phone", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.PhoneNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Email, "Email*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Address1, "Address*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Address1, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.Address1, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Address2, "Address2", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Address2, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.Address2, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.City, "City*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.City, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.State, "State*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.State, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.State, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Student.ZipCode, "Zip Code*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.ZipCode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.ZipCode, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.FirstGraduationYear, "First Graduation Year*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.FirstGraduationYear, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.FirstGraduationYear, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Student.SecondGraduationYear, "Second Graduation Year", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.SecondGraduationYear, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.SecondGraduationYear, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Student.ThirdGraduationYear, "Third Graduation Year", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.ThirdGraduationYear, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.ThirdGraduationYear, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.BirthDate, "Date of Birth*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Student.BirthDate, "ShortDateTime", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.BirthDate, "", new {@class = "text-danger"})
            </div>
        </div>

        @*    <div class="form-group">
            @Html.LabelFor(model => model.Student.ConstituentType, "Constituent Type*", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Student.ConstituentType, new SelectList(
                new List<object>
                    {
                    new {value = 0, text = ""},
                    new {value = "Alumni", text = "Alumni"},
                    new {value = "Student", text = "Student"},
                    new {value = "Other", text = "Other"}
                    },
                    "value", "text", Model.Student.ConstituentType), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.ConstituentType, "", new { @class = "text-danger" })
            </div>
        </div> *@

        <div class="form-group">
            @Html.LabelFor(model => model.Student.AllowCommunication, "Authorize Communication*", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.AllowCommunication, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Student.AllowCommunication, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign In" class="btn btn-primary btn-sm"/>
            </div>
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to Events", "SignIn", new {id = ccEventID})
    </div>
}